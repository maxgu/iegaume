<?php $this->headTitle('Урок 1а'); ?>

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="<?=$this->url('section', ['id' => 0])?>">1. Prieks iepazīties</a></li>
        <li class="breadcrumb-item active" aria-current="page">a. Iepazīšanas</li>
    </ol>
</nav>

<ul class="nav nav-pills justify-content-center">
    <li class="nav-item">
        <a class="nav-link active" href="<?=$this->url('lesson', ['sectionId' => 1, 'id' => 'a', 'mode' => 'cards'])?>">Карточки</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="<?=$this->url('lesson', ['sectionId' => 1, 'id' => 'a', 'mode' => 'learn'])?>">Учи</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="<?=$this->url('lesson', ['sectionId' => 1, 'id' => 'a', 'mode' => 'write'])?>">Пиши</a>
    </li>
</ul>

<div class="row mt-3">
    <div class="col">
        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
            <button type="button" class="btn btn-light">9 Осталось&nbsp;&nbsp;&nbsp;<i class="fa fa-arrow-right"></i></button>
            <button type="button" class="btn btn-light pl-2">0 Знаком&nbsp;&nbsp;&nbsp;<i class="fa fa-arrow-right"></i></button>
            <button type="button" class="btn btn-light pl-1">1 Изучено</button>
        </div>
    </div>
</div>
<div class="row mt-2" style="height: 270px;">
    <div class="col d-flex">
        <a class="card border-primary align-self-stretc w-100 animated" href="javascript:void(0)" id="word-1">
            <div class="card-body text-dark d-flex align-items-start flex-column">
                <h2 class="card-title mb-auto">Raksti</h2>
                <p class="card-text">Читай</p>
            </div>
        </a>
        <a class="card border-primary align-self-stretc w-100 animated d-none" href="javascript:void(0)" id="word-2">
            <div class="card-body text-dark d-flex align-items-start flex-column">
                <h2 class="card-title mb-auto">Huyaksti</h2>
                <p class="card-text">Хуяй</p>
            </div>
        </a>
    </div>
</div>
<div class="row mt-2">
    <div class="col d-flex justify-content-between">
        <button type="button" class="btn btn-primary btn-lg" id="prev-card-btn"><i class="fa fa-chevron-left"></i></button>
        <button type="button" class="btn btn-primary btn-lg" id="next-card-btn"><i class="fa fa-chevron-right"></i></button>
    </div>
</div>

<?php $this->inlineScript()->captureStart();
echo <<<JS

class LinkedList {
    constructor(values) {
        this.values = values;
        this.current = 0;
    }
    
    next() {
        if ((this.current + 1) in this.values) {
            this.current++;
        }
    }
    
    prev() {
        if ((this.current - 1) in this.values) {
            this.current--;
        }
    }
    
    getCurrent() {
        return '#' + this.values[this.current];
    }
    
    getNext() {
        if ((this.current + 1) in this.values) {
            return '#' + this.values[this.current + 1];
        }
        
        return null;
    }
    
    getPrev() {
        if ((this.current - 1) in this.values) {
            return '#' + this.values[this.current - 1];
        }
        
        return null;
    }
}

var cards = new LinkedList(['word-1', 'word-2']);
function animateCSS(element, animationName, callback) {
    const node = document.querySelector(element)
    node.classList.add('animated', animationName)

    function handleAnimationEnd() {
        node.classList.remove('animated', animationName)
        node.removeEventListener('animationend', handleAnimationEnd)

        if (typeof callback === 'function') callback()
    }

    node.addEventListener('animationend', handleAnimationEnd)
}

function showNext() {
    var nextCard = cards.getNext();
    
    if (nextCard == null) {
        $('#next-card-btn').attr('disabled', 'disabled');
        return;
    }
    
    animateCSS(cards.getCurrent(), 'fadeOutLeft', function() {
        $(cards.getCurrent()).hide();
        $(nextCard).removeClass('d-none');
        $(nextCard).show();
        animateCSS(nextCard, 'fadeInRight');
        cards.next();
        
        if (cards.getPrev() == null) {
            $('#prev-card-btn').attr('disabled', 'disabled');
        } else {
            $('#prev-card-btn').removeAttr('disabled');
        }
        
        if (cards.getNext() == null) {
            $('#next-card-btn').attr('disabled', 'disabled');
        } else {
            $('#next-card-btn').removeAttr('disabled');
        }
    });
}

function showPrev() {
    var prevCard = cards.getPrev();
    
    if (prevCard == null) {
        $('#prev-card-btn').attr('disabled', 'disabled');
        return;
    }
    
    animateCSS(cards.getCurrent(), 'fadeOutRight', function() {
        $(cards.getCurrent()).hide();
        $(prevCard).removeClass('d-none');
        $(prevCard).show();
        animateCSS(prevCard, 'fadeInLeft');
        cards.prev();
        
        if (cards.getPrev() == null) {
            $('#prev-card-btn').attr('disabled', 'disabled');
        } else {
            $('#prev-card-btn').removeAttr('disabled');
        }
        
        if (cards.getNext() == null) {
            $('#next-card-btn').attr('disabled', 'disabled');
        } else {
            $('#next-card-btn').removeAttr('disabled');
        }
    });
}

$(document).ready(function () {
    $('#prev-card-btn').attr('disabled', 'disabled');
    $('#prev-card-btn').click(showPrev);
    $('#next-card-btn').click(showNext);
    $('.card').click(showNext);
})
JS;
$this->inlineScript()->captureEnd(); ?>
